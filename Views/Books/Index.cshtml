@model bookshop.ViewModels.BookTitleViewModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

@if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
}

<form asp-controller="Books" asp-action="Index" method="get">
    <p>
        Title: <input type="text" asp-for="SearchString" />
        <input type="submit" value="Filter" />
    </p>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Books[0].FrontPage)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Books[0].Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Books[0].Author)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Books[0].YearPublished)
            </th>
            <th>
                Average Rating
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Books[0].Genres)
            </th>
            <th>
                @if (User.Identity.IsAuthenticated && (User.IsInRole("Admin")))
                {
                    @Html.DisplayNameFor(model => model.Books[0].DownloadUrl)
                }
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Books) {
        <tr>
            <td>
                @*@Html.DisplayFor(modelItem => item.FrontPage)*@
                @if(item.FrontPage != null)
                {
                    <img src="@item.FrontPage" height="300px" width="190px" asp-append-version="true" />
                }
                else
                {
                    <p>Image not found.</p>
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Author.FullName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.YearPublished)
            </td>
                @{
                    var averageRating = item.Reviews?.Count > 0 ? item.Reviews.Average(r => r.Rating) : 0;
                    <td>
                        @String.Format("{0:0.00}", averageRating)
                    </td>
                }
                
                @{
                    foreach (var genre in item.Genres!)
                    {
                        <td>@genre.Genre!.GenreName</td>
                    }
                }

                <td align="right">
                    @if (User.Identity.IsAuthenticated & User.IsInRole("Admin"))
                    {
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                    }
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                    @if (User.Identity.IsAuthenticated & User.IsInRole("Admin"))
                    {
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    }
            </td>
                <td>
                    @if (User.Identity.IsAuthenticated && (User.IsInRole("Admin")))
                    {
                        <form a asp-action="GetPdf" asp-controller="Books">
                            <input name="url" type="hidden" value="@item.DownloadUrl">
                            <input type="submit" value="Download pdf">
                        </form>
                    }
                </td>
        </tr>
}
    </tbody>
</table>
